<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\pwmLight.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\pwmLight.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Wed Oct 09 20:24:07 2019
<BR><P>
<H3>Maximum Stack Usage =        612 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
wristProfile_WriteAttrCB &rArr; on_recieved_cmd_packet &rArr; cmd_set_time &rArr; cmd_response_err &rArr; wristProfile_Notify &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">NMI_Handler</a><BR>
 <LI><a href="#[3]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">HardFault_Handler</a><BR>
 <LI><a href="#[4]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">SVC_Handler</a><BR>
 <LI><a href="#[5]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">PendSV_Handler</a><BR>
 <LI><a href="#[6]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SysTick_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[25]">GAPRole_ProcessEvent</a> from peripheral.o(i.GAPRole_ProcessEvent) referenced from osal_wrist.o(.constdata)
 <LI><a href="#[22]">GAP_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_wrist.o(.constdata)
 <LI><a href="#[26]">GATTServApp_ProcessEvent</a> from gattservapp.o(i.GATTServApp_ProcessEvent) referenced from osal_wrist.o(.constdata)
 <LI><a href="#[23]">GATT_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_wrist.o(.constdata)
 <LI><a href="#[20]">HCI_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_wrist.o(.constdata)
 <LI><a href="#[3]">HardFault_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[21]">L2CAP_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_wrist.o(.constdata)
 <LI><a href="#[1f]">LL_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_wrist.o(.constdata)
 <LI><a href="#[2]">NMI_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[5]">PendSV_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[1]">Reset_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[24]">SM_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_wrist.o(.constdata)
 <LI><a href="#[4]">SVC_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[6]">SysTick_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[8]">SystemInit</a> from system_armcm0.o(i.SystemInit) referenced from startup_armcm0.o(.text)
 <LI><a href="#[0]">WristGapStateCB</a> from app_wrist.o(i.WristGapStateCB) referenced 2 times from app_wrist.o(.data)
 <LI><a href="#[9]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_armcm0.o(.text)
 <LI><a href="#[b]">_sputc</a> from printf3.o(i._sputc) referenced from printf3.o(i.__0sprintf$3)
 <LI><a href="#[c]">adc_evt</a> from adccaptrue.o(i.adc_evt) referenced from adccaptrue.o(i.adcMeasureTask)
 <LI><a href="#[10]">adc_wakeup_hdl</a> from adc.o(i.adc_wakeup_hdl) referenced from adc.o(i.hal_adc_init)
 <LI><a href="#[27]">appWristProcEvt</a> from app_wrist.o(i.appWristProcEvt) referenced from osal_wrist.o(.constdata)
 <LI><a href="#[13]">cons_callback</a> from main.o(i.cons_callback) referenced from main.o(i.hal_init)
 <LI><a href="#[2a]">console_rx_handler</a> from phy_console.o(i.console_rx_handler) referenced from phy_console.o(.constdata)
 <LI><a href="#[f]">console_sleep_handler</a> from phy_console.o(i.console_sleep_handler) referenced from phy_console.o(i.console_init)
 <LI><a href="#[e]">console_wakeup_handler</a> from phy_console.o(i.console_wakeup_handler) referenced from phy_console.o(i.console_init)
 <LI><a href="#[19]">devInfo_ReadAttrCB</a> from devinfoservice.o(i.devInfo_ReadAttrCB) referenced from devinfoservice.o(.constdata)
 <LI><a href="#[a]">gattServApp_HandleConnStatusCB</a> from gattservapp.o(i.gattServApp_HandleConnStatusCB) referenced from gattservapp.o(i.GATTServApp_Init)
 <LI><a href="#[1a]">gattServApp_WriteAttrCB</a> from gattservapp.o(i.gattServApp_WriteAttrCB) referenced from gattservapp.o(.constdata)
 <LI><a href="#[1b]">ggs_ReadAttrCB</a> from gapgattserver.o(i.ggs_ReadAttrCB) referenced from gapgattserver.o(.constdata)
 <LI><a href="#[1c]">ggs_WriteAttrCB</a> from gapgattserver.o(i.ggs_WriteAttrCB) referenced from gapgattserver.o(.constdata)
 <LI><a href="#[12]">gpio_sleep_handler</a> from gpio.o(i.gpio_sleep_handler) referenced from gpio.o(i.hal_gpio_init)
 <LI><a href="#[11]">gpio_wakeup_handler</a> from gpio.o(i.gpio_wakeup_handler) referenced from gpio.o(i.hal_gpio_init)
 <LI><a href="#[35]">hal_ADC_IRQHandler</a> from adc.o(i.hal_ADC_IRQHandler) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[34]">hal_GPIO_IRQHandler</a> from gpio.o(i.hal_GPIO_IRQHandler) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[30]">hal_KSCAN_IRQHandler</a> from kscan.o(i.hal_KSCAN_IRQHandler) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[32]">hal_SPI0_IRQHandler</a> from spi.o(i.hal_SPI0_IRQHandler) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[33]">hal_SPI1_IRQHandler</a> from spi.o(i.hal_SPI1_IRQHandler) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[31]">hal_UART0_IRQHandler</a> from uart.o(i.hal_UART0_IRQHandler) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[2c]">hal_pwrmgr_sleep_process</a> from pwrmgr.o(i.hal_pwrmgr_sleep_process) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[2d]">hal_pwrmgr_wakeup_process</a> from pwrmgr.o(i.hal_pwrmgr_wakeup_process) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[18]">handleConnStatusCB</a> from ota_app_service.o(i.handleConnStatusCB) referenced from ota_app_service.o(i.ota_app_AddService)
 <LI><a href="#[2f]">hard_fault</a> from jump_table.o(i.hard_fault) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[16]">ll_hw_go1</a> from patch.o(i.ll_hw_go1) referenced from patch.o(i.init_config)
 <LI><a href="#[7]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[2b]">osalInitTasks</a> from osal_wrist.o(i.osalInitTasks) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[1d]">ota_ReadAttrCB</a> from ota_app_service.o(i.ota_ReadAttrCB) referenced from ota_app_service.o(.constdata)
 <LI><a href="#[1e]">ota_WriteAttrCB</a> from ota_app_service.o(i.ota_WriteAttrCB) referenced from ota_app_service.o(.constdata)
 <LI><a href="#[17]">rf_calibrate1</a> from patch.o(i.rf_calibrate1) referenced from patch.o(i.init_config)
 <LI><a href="#[2e]">rf_phy_ini</a> from rf_phy_driver.o(i.rf_phy_ini) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[14]">rf_wakeup_handler</a> from main.o(i.rf_wakeup_handler) referenced from main.o(i.hal_rfphy_init)
 <LI><a href="#[15]">uart_hw_config</a> from uart.o(i.uart_hw_config) referenced from uart.o(i.hal_uart_init)
 <LI><a href="#[d]">wristCB</a> from app_wrist.o(i.wristCB) referenced from app_wrist.o(i.appWristInit)
 <LI><a href="#[28]">wristProfile_ReadAttrCB</a> from wristservice.o(i.wristProfile_ReadAttrCB) referenced from wristservice.o(.constdata)
 <LI><a href="#[29]">wristProfile_WriteAttrCB</a> from wristservice.o(i.wristProfile_WriteAttrCB) referenced from wristservice.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[54]"></a>__aeabi_uidivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_system_init (via Veneer)
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config (via Veneer)
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printi (via Veneer)
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_evt (via Veneer)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core (via Veneer)
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_tracking_check (via Veneer)
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime (via Veneer)
</UL>

<P><STRONG><a name="[3e]"></a>__aeabi_idivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set (via Veneer)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_set (via Veneer)
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime (via Veneer)
</UL>

<P><STRONG><a name="[15d]"></a>strlen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf (via Veneer)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd (via Veneer)
</UL>

<P><STRONG><a name="[112]"></a>strcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_default_tm (via Veneer)
</UL>

<P><STRONG><a name="[9e]"></a>ATT_CompareUUID</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
</UL>

<P><STRONG><a name="[107]"></a>ATT_ErrorRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg (via Veneer)
</UL>

<P><STRONG><a name="[fa]"></a>ATT_ExchangeMTURsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExchangeMTUReq (via Veneer)
</UL>

<P><STRONG><a name="[fc]"></a>ATT_ExecuteWriteRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq (via Veneer)
</UL>

<P><STRONG><a name="[ff]"></a>ATT_FindByTypeValueRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
</UL>

<P><STRONG><a name="[109]"></a>ATT_PrepareWriteRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq (via Veneer)
</UL>

<P><STRONG><a name="[10a]"></a>ATT_ReadBlobRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadBlobReq (via Veneer)
</UL>

<P><STRONG><a name="[10c]"></a>ATT_ReadByGrpTypeRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
</UL>

<P><STRONG><a name="[10d]"></a>ATT_ReadByTypeRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
</UL>

<P><STRONG><a name="[10e]"></a>ATT_ReadMultiRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq (via Veneer)
</UL>

<P><STRONG><a name="[10f]"></a>ATT_ReadRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadReq (via Veneer)
</UL>

<P><STRONG><a name="[110]"></a>ATT_WriteRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq (via Veneer)
</UL>

<P><STRONG><a name="[ef]"></a>GAP_Bond</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrBondReq (via Veneer)
</UL>

<P><STRONG><a name="[81]"></a>GAP_EndDiscoverable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
</UL>

<P><STRONG><a name="[73]"></a>GAP_GetParamValue</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WristGapStateCB (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter (via Veneer)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate (via Veneer)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
</UL>

<P><STRONG><a name="[156]"></a>GAP_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[79]"></a>GAP_MakeDiscoverable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[8a]"></a>GAP_ParamsInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
</UL>

<P><STRONG><a name="[8c]"></a>GAP_PeriDevMgrInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
</UL>

<P><STRONG><a name="[22]"></a>GAP_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_wrist.o(.constdata)
</UL>
<P><STRONG><a name="[75]"></a>GAP_RegisterForHCIMsgs</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_Init (via Veneer)
</UL>

<P><STRONG><a name="[f1]"></a>GAP_ResolvePrivateAddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrResolvePrivateAddr (via Veneer)
</UL>

<P><STRONG><a name="[8b]"></a>GAP_SecParamsInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
</UL>

<P><STRONG><a name="[f2]"></a>GAP_SendSlaveSecurityRequest</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrSlaveSecurityReq (via Veneer)
</UL>

<P><STRONG><a name="[6b]"></a>GAP_SetParamValue</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WristGapStateCB (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristInit (via Veneer)
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_Register (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
</UL>

<P><STRONG><a name="[65]"></a>GAP_Signable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst (via Veneer)
</UL>

<P><STRONG><a name="[88]"></a>GAP_TerminateLinkReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_TerminateConnection (via Veneer)
</UL>

<P><STRONG><a name="[83]"></a>GAP_UpdateAdvertisingData</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
</UL>

<P><STRONG><a name="[108]"></a>GATT_AppCompletedMsg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg (via Veneer)
</UL>

<P><STRONG><a name="[9c]"></a>GATT_FindHandle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq (via Veneer)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadReq (via Veneer)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq (via Veneer)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadBlobReq (via Veneer)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq (via Veneer)
</UL>

<P><STRONG><a name="[fe]"></a>GATT_FindHandleUUID</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
</UL>

<P><STRONG><a name="[9d]"></a>GATT_FindNextAttr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
</UL>

<P><STRONG><a name="[157]"></a>GATT_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[170]"></a>GATT_Notification</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wristProfile_Notify (via Veneer)
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendNotify (via Veneer)
</UL>

<P><STRONG><a name="[23]"></a>GATT_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_wrist.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>GATT_RegisterForReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init (via Veneer)
</UL>

<P><STRONG><a name="[a1]"></a>GATT_RegisterService</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService (via Veneer)
</UL>

<P><STRONG><a name="[a5]"></a>GATT_ServiceChangedInd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendServiceChangedInd (via Veneer)
</UL>

<P><STRONG><a name="[10b]"></a>GATT_VerifyReadPermissions</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
</UL>

<P><STRONG><a name="[154]"></a>HCI_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[20]"></a>HCI_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_wrist.o(.constdata)
</UL>
<P><STRONG><a name="[7a]"></a>HCI_ReadRssiCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[f4]"></a>L2CAP_ConnParamUpdateReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate (via Veneer)
</UL>

<P><STRONG><a name="[155]"></a>L2CAP_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[21]"></a>L2CAP_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_wrist.o(.constdata)
</UL>
<P><STRONG><a name="[153]"></a>LL_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[1f]"></a>LL_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_wrist.o(.constdata)
</UL>
<P><STRONG><a name="[158]"></a>SM_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[24]"></a>SM_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_wrist.o(.constdata)
</UL>
<P><STRONG><a name="[8d]"></a>SM_ResponderInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
</UL>

<P><STRONG><a name="[72]"></a>__ARM_common_switch8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter (via Veneer)
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_ReadAttrCB (via Veneer)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tp_cal (via Veneer)
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rxDcoc_cfg (via Veneer)
</UL>

<P><STRONG><a name="[146]"></a>boot_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini (via Veneer)
</UL>

<P><STRONG><a name="[ad]"></a>clock_time_rtc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount (via Veneer)
</UL>

<P><STRONG><a name="[141]"></a>disableSleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_init (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock (via Veneer)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock (via Veneer)
</UL>

<P><STRONG><a name="[142]"></a>enableSleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_init (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock (via Veneer)
</UL>

<P><STRONG><a name="[93]"></a>linkDB_Register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init (via Veneer)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_app_AddService (via Veneer)
</UL>

<P><STRONG><a name="[f8]"></a>linkDB_State</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_HandleConnStatusCB (via Veneer)
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wristProfile_HandleConnStatusCB (via Veneer)
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleConnStatusCB (via Veneer)
</UL>

<P><STRONG><a name="[84]"></a>osal_get_timeoutEx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
</UL>

<P><STRONG><a name="[cf]"></a>osal_init_system</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[64]"></a>osal_isbufset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrResolvePrivateAddr (via Veneer)
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst (via Veneer)
</UL>

<P><STRONG><a name="[111]"></a>osal_mem_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_RegisterServiceCBs (via Veneer)
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[150]"></a>osal_mem_set_heap</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[f0]"></a>osal_memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrFindReconnectAddr (via Veneer)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrFindAddr (via Veneer)
</UL>

<P><STRONG><a name="[5d]"></a>osal_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter (via Veneer)
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_WriteAttrCB (via Veneer)
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_ReadAttrCB (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq (via Veneer)
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_EnqueuePrepareWriteReq (via Veneer)
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DevInfo_SetParameter (via Veneer)
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devInfo_ReadAttrCB (via Veneer)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response (via Veneer)
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read (via Veneer)
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr (via Veneer)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrGetPublicAddr (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
</UL>

<P><STRONG><a name="[62]"></a>osal_memset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_SetNumPrepareWrites (via Veneer)
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq (via Veneer)
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_HandleConnStatusCB (via Veneer)
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response (via Veneer)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd (via Veneer)
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrBondReq (via Veneer)
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_Init (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
</UL>

<P><STRONG><a name="[a3]"></a>osal_msg_allocate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendCCCUpdatedEvent (via Veneer)
</UL>

<P><STRONG><a name="[78]"></a>osal_msg_deallocate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessEvent (via Veneer)
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristProcEvt (via Veneer)
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[76]"></a>osal_msg_receive</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessEvent (via Veneer)
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristProcEvt (via Veneer)
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[a4]"></a>osal_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendCCCUpdatedEvent (via Veneer)
</UL>

<P><STRONG><a name="[d0]"></a>osal_pwrmgr_device</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[82]"></a>osal_set_event</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristInit (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
</UL>

<P><STRONG><a name="[d1]"></a>osal_start_system</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[7b]"></a>osal_start_timerEx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_KSCAN_IRQHandler (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate (via Veneer)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcMeasureTask (via Veneer)
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_start_timer (via Veneer)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ProcessEvent (via Veneer)
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dt_timer_start (via Veneer)
</UL>

<P><STRONG><a name="[7f]"></a>osal_stop_timerEx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_KSCAN_IRQHandler (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SendUpdateParam (via Veneer)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_stop_timer (via Veneer)
</UL>

<P><STRONG><a name="[9f]"></a>osal_strlen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_WriteAttrCB (via Veneer)
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_ReadAttrCB (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_parse_cmd (via Veneer)
</UL>

<P><STRONG><a name="[b3]"></a>pad_ds_control</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcMeasureTask (via Veneer)
</UL>

<P><STRONG><a name="[147]"></a>wakeup_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini (via Veneer)
</UL>

<P><STRONG><a name="[9]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(.text)
</UL>
<P><STRONG><a name="[175]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[36]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[58]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[176]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[177]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[178]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[179]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[17a]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>AACI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AACI_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AACI_IRQHandler
</UL>

<P><STRONG><a name="[17b]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[17c]"></a>CHLCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[17d]"></a>CLCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[17e]"></a>CPU_CLCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[17f]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[180]"></a>FLEXRAY_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[181]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[182]"></a>LIN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[183]"></a>MCIA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[184]"></a>MCIB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[185]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[186]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[187]"></a>TIM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[188]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[189]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[18a]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[18b]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[18c]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[18d]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[18e]"></a>USBDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>USBHC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[190]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_lmul</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, llmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_adjust_baseline
</UL>

<P><STRONG><a name="[191]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>mktime</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, mktime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mktime &rArr; _localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_adjust_baseline
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_use_tx_buf
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kscan_compare_key
</UL>

<P><STRONG><a name="[11f]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_KSCAN_IRQHandler
</UL>

<P><STRONG><a name="[192]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[193]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[194]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>

<P><STRONG><a name="[cc]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_response_err
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_response
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_set
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_adcc_cfg
</UL>

<P><STRONG><a name="[195]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[e6]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_parse_cmd
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_default_tm
</UL>

<P><STRONG><a name="[113]"></a>strtok</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, strtok.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strtok
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_default_tm
</UL>

<P><STRONG><a name="[43]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_default_tm
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[49]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[12d]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
</UL>

<P><STRONG><a name="[4b]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
</UL>

<P><STRONG><a name="[4c]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
</UL>

<P><STRONG><a name="[4e]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
</UL>

<P><STRONG><a name="[50]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
</UL>

<P><STRONG><a name="[52]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[196]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[197]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>localtime</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, localtime_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = localtime &rArr; _localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime
</UL>

<P><STRONG><a name="[3f]"></a>_localtime</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, localtime_i.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
</UL>

<P><STRONG><a name="[45]"></a>strtol</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[198]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[47]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[4d]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[51]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[37]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[199]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[56]"></a>_strtoul</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[59]"></a>_chval</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[19a]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[19b]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>DevInfo_AddService</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, devinfoservice.o(i.DevInfo_AddService))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DevInfo_AddService &rArr; GATTServApp_RegisterService &rArr; gattServApp_RegisterServiceCBs
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristInit
</UL>

<P><STRONG><a name="[5c]"></a>DevInfo_SetParameter</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, devinfoservice.o(i.DevInfo_SetParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DevInfo_SetParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WristGapStateCB
</UL>

<P><STRONG><a name="[5e]"></a>GAPBondMgr_LinkEst</STRONG> (Thumb, 242 bytes, Stack size 88 bytes, gapbondmgr.o(i.GAPBondMgr_LinkEst))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = GAPBondMgr_LinkEst &rArr; gapBondMgrBondReq &rArr; osal_snv_read &rArr; print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_UpdateCharCfg
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendServiceChangedInd
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_isbufset (via Veneer)
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Signable (via Veneer)
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrSlaveSecurityReq
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrInvertCharCfgItem
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrGetStateFlags
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrBondReq
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg
</UL>

<P><STRONG><a name="[6a]"></a>GAPBondMgr_Register</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gapbondmgr.o(i.GAPBondMgr_Register))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GAPBondMgr_Register
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterForMsg
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SetParamValue (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristProcEvt
</UL>

<P><STRONG><a name="[5f]"></a>GAPBondMgr_ResolveAddr</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, gapbondmgr.o(i.GAPBondMgr_ResolveAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = GAPBondMgr_ResolveAddr &rArr; gapBondMgrResolvePrivateAddr &rArr; osal_snv_read &rArr; print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrResolvePrivateAddr
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrGetPublicAddr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrFindReconnectAddr
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrFindAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[71]"></a>GAPRole_GetParameter</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, peripheral.o(i.GAPRole_GetParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GAPRole_GetParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue (via Veneer)
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wristProfile_Notify
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_query_version
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WristGapStateCB
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendNotify
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd
</UL>

<P><STRONG><a name="[74]"></a>GAPRole_Init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, peripheral.o(i.GAPRole_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GAPRole_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_RegisterForHCIMsgs (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks
</UL>

<P><STRONG><a name="[25]"></a>GAPRole_ProcessEvent</STRONG> (Thumb, 304 bytes, Stack size 32 bytes, peripheral.o(i.GAPRole_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = GAPRole_ProcessEvent &rArr; gapRole_ProcessOSALMsg &rArr; gapRole_ProcessGAPMsg &rArr; GAPBondMgr_LinkEst &rArr; gapBondMgrBondReq &rArr; osal_snv_read &rArr; print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_ReadRssiCmd (via Veneer)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_MakeDiscoverable (via Veneer)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_HandleParamUpdateNoSuccess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_wrist.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>GAPRole_SendUpdateParam</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, peripheral.o(i.GAPRole_SendUpdateParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GAPRole_SendUpdateParam &rArr; gapRole_startConnUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_HandleParamUpdateNoSuccess
</UL>

<P><STRONG><a name="[80]"></a>GAPRole_SetParameter</STRONG> (Thumb, 760 bytes, Stack size 24 bytes, peripheral.o(i.GAPRole_SetParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GAPRole_SetParameter &rArr; gapRole_startConnUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_get_timeoutEx (via Veneer)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_UpdateAdvertisingData (via Veneer)
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SetParamValue (via Veneer)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_EndDiscoverable (via Veneer)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WristGapStateCB
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristInit
</UL>

<P><STRONG><a name="[85]"></a>GAPRole_StartDevice</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, peripheral.o(i.GAPRole_StartDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GAPRole_StartDevice &rArr; gapRole_SetupGAP &rArr; GAP_DeviceInit
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_SetupGAP
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristProcEvt
</UL>

<P><STRONG><a name="[87]"></a>GAPRole_TerminateConnection</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, peripheral.o(i.GAPRole_TerminateConnection))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GAPRole_TerminateConnection
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_TerminateLinkReq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_HandleParamUpdateNoSuccess
</UL>

<P><STRONG><a name="[89]"></a>GAP_DeviceInit</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gap.o(i.GAP_DeviceInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GAP_DeviceInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_ResponderInit (via Veneer)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SecParamsInit (via Veneer)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_PeriDevMgrInit (via Veneer)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ParamsInit (via Veneer)
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_SetupGAP
</UL>

<P><STRONG><a name="[8e]"></a>GATTServApp_AddService</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_AddService))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GATTServApp_AddService &rArr; GATTServApp_RegisterService &rArr; gattServApp_RegisterServiceCBs
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristInit
</UL>

<P><STRONG><a name="[8f]"></a>GATTServApp_Init</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gattservapp.o(i.GATTServApp_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GATTServApp_Init &rArr; gattServApp_SetNumPrepareWrites
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Register (via Veneer)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_RegisterForReq (via Veneer)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_SetNumPrepareWrites
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks
</UL>

<P><STRONG><a name="[90]"></a>GATTServApp_InitCharCfg</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_InitCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GATTServApp_InitCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindCharCfgItem
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_HandleConnStatusCB
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wristProfile_HandleConnStatusCB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wristProfile_AddService
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_app_AddService
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleConnStatusCB
</UL>

<P><STRONG><a name="[95]"></a>GATTServApp_ProcessCCCWriteReq</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gattservapp.o(i.GATTServApp_ProcessCCCWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GATTServApp_ProcessCCCWriteReq &rArr; GATTServApp_WriteCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteCharCfg
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendCCCUpdatedEvent
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_WriteAttrCB
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wristProfile_WriteAttrCB
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_WriteAttrCB
</UL>

<P><STRONG><a name="[26]"></a>GATTServApp_ProcessEvent</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GATTServApp_ProcessEvent &rArr; gattServApp_ProcessMsg &rArr; gattServApp_ProcessReadByTypeReq &rArr; GATTServApp_ReadAttr &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_wrist.o(.constdata)
</UL>
<P><STRONG><a name="[9a]"></a>GATTServApp_ReadAttr</STRONG> (Thumb, 662 bytes, Stack size 64 bytes, gattservapp.o(i.GATTServApp_ReadAttr))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GATTServApp_ReadAttr &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_strlen (via Veneer)
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindNextAttr (via Veneer)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_CompareUUID (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindReadAttrCB
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindAuthorizeAttrCB
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadReq
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadBlobReq
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq
</UL>

<P><STRONG><a name="[96]"></a>GATTServApp_ReadCharCfg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_ReadCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindCharCfgItem
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendServiceChangedInd
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wristProfile_Notify
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendNotify
</UL>

<P><STRONG><a name="[6c]"></a>GATTServApp_RegisterForMsg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gattservapp.o(i.GATTServApp_RegisterForMsg))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_Register
</UL>

<P><STRONG><a name="[5b]"></a>GATTServApp_RegisterService</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, gattservapp.o(i.GATTServApp_RegisterService))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GATTServApp_RegisterService &rArr; gattServApp_RegisterServiceCBs
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_RegisterService (via Veneer)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_RegisterServiceCBs
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_AddService
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_AddService
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DevInfo_AddService
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wristProfile_AddService
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_app_AddService
</UL>

<P><STRONG><a name="[98]"></a>GATTServApp_SendCCCUpdatedEvent</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, gattservapp.o(i.GATTServApp_SendCCCUpdatedEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GATTServApp_SendCCCUpdatedEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
</UL>

<P><STRONG><a name="[68]"></a>GATTServApp_SendServiceChangedInd</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_SendServiceChangedInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GATTServApp_SendServiceChangedInd &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_ServiceChangedInd (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[67]"></a>GATTServApp_UpdateCharCfg</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gattservapp.o(i.GATTServApp_UpdateCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GATTServApp_UpdateCharCfg &rArr; GATTServApp_WriteAttr &rArr; gattServApp_FindWriteAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[a6]"></a>GATTServApp_WriteAttr</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, gattservapp.o(i.GATTServApp_WriteAttr))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GATTServApp_WriteAttr &rArr; gattServApp_FindWriteAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindWriteAttrCB
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_UpdateCharCfg
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq
</UL>

<P><STRONG><a name="[97]"></a>GATTServApp_WriteCharCfg</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gattservapp.o(i.GATTServApp_WriteCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GATTServApp_WriteCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindCharCfgItem
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
</UL>

<P><STRONG><a name="[a8]"></a>GGS_AddService</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gapgattserver.o(i.GGS_AddService))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GGS_AddService &rArr; GATTServApp_RegisterService &rArr; gattServApp_RegisterServiceCBs
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristInit
</UL>

<P><STRONG><a name="[a9]"></a>GGS_SetParameter</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, gapgattserver.o(i.GGS_SetParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GGS_SetParameter &rArr; ggs_SetAttrWPermit
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_SetAttrWPermit
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristInit
</UL>

<P><STRONG><a name="[8]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_armcm0.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(.text)
</UL>
<P><STRONG><a name="[ac]"></a>WaitRTCCount</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, common.o(i.WaitRTCCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time_rtc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_tracking_check
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration
</UL>

<P><STRONG><a name="[b0]"></a>__0sprintf$3</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[19c]"></a>__1sprintf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3), UNUSED)

<P><STRONG><a name="[163]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd
</UL>

<P><STRONG><a name="[57]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[44]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[19d]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[19e]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[19f]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[1a0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[b8]"></a>adc_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, adccaptrue.o(i.adc_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = adc_Init &rArr; adcMeasureTask &rArr; hal_adc_config_channel &rArr; set_analog_pin &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcMeasureTask
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks
</UL>

<P><STRONG><a name="[b9]"></a>adc_ProcessEvent</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, adccaptrue.o(i.adc_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = adc_ProcessEvent &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ProcessOSALMsg
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcMeasureTask
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_recieved_cmd_packet
</UL>

<P><STRONG><a name="[bd]"></a>appWristInit</STRONG> (Thumb, 284 bytes, Stack size 56 bytes, app_wrist.o(i.appWristInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = appWristInit &rArr; app_datetime_init &rArr; check_default_datetime &rArr; app_datetime_adjust_baseline &rArr; print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_AddService
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_AddService
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DevInfo_AddService
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wristProfile_AddService
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_app_AddService
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SetParamValue (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks
</UL>

<P><STRONG><a name="[27]"></a>appWristProcEvt</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, app_wrist.o(i.appWristProcEvt))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = appWristProcEvt &rArr; app_datetime_sync_handler &rArr; datetime_print &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_timeout_handle
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_sync_handler
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristProcOSALMsg
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_Register
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_StartDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_wrist.o(.constdata)
</UL>
<P><STRONG><a name="[c5]"></a>app_datetime</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, app_datetime.o(i.app_datetime))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_datetime &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cnt_get
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_set_time
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get_time
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;datetime_print
</UL>

<P><STRONG><a name="[c0]"></a>app_datetime_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_datetime.o(i.app_datetime_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = app_datetime_init &rArr; check_default_datetime &rArr; app_datetime_adjust_baseline &rArr; print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_default_datetime
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dt_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristInit
</UL>

<P><STRONG><a name="[cb]"></a>app_datetime_set</STRONG> (Thumb, 116 bytes, Stack size 72 bytes, app_datetime.o(i.app_datetime_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = app_datetime_set &rArr; app_datetime_adjust_baseline &rArr; print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_adjust_baseline
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hex
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_set_time
</UL>

<P><STRONG><a name="[c3]"></a>app_datetime_sync_handler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_datetime.o(i.app_datetime_sync_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = app_datetime_sync_handler &rArr; datetime_print &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;datetime_print
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cnt_get
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dt_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristProcEvt
</UL>

<P><STRONG><a name="[ce]"></a>app_main</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wrist_main.o(i.app_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_main
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_system (via Veneer)
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_pwrmgr_device (via Veneer)
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_init_system (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[167]"></a>arry_sort</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, patch.o(i.arry_sort))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = arry_sort
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_tracking_check
</UL>

<P><STRONG><a name="[d2]"></a>check_chip_id</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flash_ext.o(i.check_chip_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = check_chip_id &rArr; read_chip_id &rArr; chip_id_one_bit_hot_convter
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_chip_id
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_config
</UL>

<P><STRONG><a name="[d4]"></a>check_chip_mAddr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flash_ext.o(i.check_chip_mAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = check_chip_mAddr &rArr; read_chip_mAddr &rArr; chip_id_one_bit_hot_convter
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_chip_mAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_config
</UL>

<P><STRONG><a name="[12c]"></a>clk_gate_disable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, clock.o(i.clk_gate_disable))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
</UL>

<P><STRONG><a name="[124]"></a>clk_gate_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, clock.o(i.clk_gate_enable))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_init
</UL>

<P><STRONG><a name="[172]"></a>clk_pclk</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clock.o(i.clk_pclk))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
</UL>

<P><STRONG><a name="[173]"></a>clk_reset</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, clock.o(i.clk_reset))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
</UL>

<P><STRONG><a name="[13]"></a>cons_callback</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, main.o(i.cons_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = cons_callback &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.hal_init)
</UL>
<P><STRONG><a name="[e2]"></a>console_init</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, phy_console.o(i.console_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = console_init &rArr; hal_uart_init &rArr; uart_hw_config &rArr; hal_gpio_fmux_set &rArr; hal_gpio_fmux
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
</UL>

<P><STRONG><a name="[e5]"></a>console_parse_cmd</STRONG> (Thumb, 400 bytes, Stack size 72 bytes, phy_console.o(i.console_parse_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = console_parse_cmd &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_strlen (via Veneer)
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_rx_handler
</UL>

<P><STRONG><a name="[2a]"></a>console_rx_handler</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, phy_console.o(i.console_rx_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = console_rx_handler &rArr; console_parse_cmd &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_parse_cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phy_console.o(.constdata)
</UL>
<P><STRONG><a name="[f]"></a>console_sleep_handler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, phy_console.o(i.console_sleep_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = console_sleep_handler &rArr; hal_gpio_wakeup_set &rArr; io_wakeup_control
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phy_console.o(i.console_init)
</UL>
<P><STRONG><a name="[e]"></a>console_wakeup_handler</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, phy_console.o(i.console_wakeup_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = console_wakeup_handler &rArr; hal_gpio_write &rArr; hal_gpio_pin_init &rArr; hal_gpio_fmux
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phy_console.o(i.console_init)
</UL>
<P><STRONG><a name="[131]"></a>gpio_pin0to3_pin31to34_control</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, gpio.o(i.gpio_pin0to3_pin31to34_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_pin0to3_pin31to34_control
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
</UL>

<P><STRONG><a name="[35]"></a>hal_ADC_IRQHandler</STRONG> (Thumb, 176 bytes, Stack size 96 bytes, adc.o(i.hal_ADC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = hal_ADC_IRQHandler &rArr; hal_adc_stop &rArr; disable_analog_pin &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[34]"></a>hal_GPIO_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gpio.o(i.hal_GPIO_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hal_GPIO_IRQHandler &rArr; gpioin_event &rArr; gpioin_event_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[30]"></a>hal_KSCAN_IRQHandler</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, kscan.o(i.hal_KSCAN_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = hal_KSCAN_IRQHandler &rArr; kscan_compare_key
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rmv_ghost_key
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kscan_compare_key
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_key_matrix
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[32]"></a>hal_SPI0_IRQHandler</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, spi.o(i.hal_SPI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = hal_SPI0_IRQHandler &rArr; spi_int_handle &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spis_int_handle
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[33]"></a>hal_SPI1_IRQHandler</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, spi.o(i.hal_SPI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = hal_SPI1_IRQHandler &rArr; spi_int_handle &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spis_int_handle
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[31]"></a>hal_UART0_IRQHandler</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, uart.o(i.hal_UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_UART0_IRQHandler &rArr; irq_tx_empty_handler &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_tx_empty_handler
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_rx_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[b4]"></a>hal_adc_config_channel</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, adc.o(i.hal_adc_config_channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hal_adc_config_channel &rArr; set_analog_pin &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_gate_enable
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_single_mode
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sampling_resolution
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_differential_mode
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_channel
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_analog_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcMeasureTask
</UL>

<P><STRONG><a name="[12a]"></a>hal_adc_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, adc.o(i.hal_adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_adc_init &rArr; hal_pwrmgr_register
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_adcc_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
</UL>

<P><STRONG><a name="[b7]"></a>hal_adc_start</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, adc.o(i.hal_adc_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_adc_start &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcMeasureTask
</UL>

<P><STRONG><a name="[11b]"></a>hal_adc_stop</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, adc.o(i.hal_adc_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_adc_stop &rArr; disable_analog_pin &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_gate_disable
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_analog_pin
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_adcc_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_ADC_IRQHandler
</UL>

<P><STRONG><a name="[bb]"></a>hal_adc_value_cal</STRONG> (Thumb, 388 bytes, Stack size 64 bytes, adc.o(i.hal_adc_value_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = hal_adc_value_cal &rArr; hal_adc_load_calibration_value &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_load_calibration_value
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_evt
</UL>

<P><STRONG><a name="[b5]"></a>hal_gpio_cfg_analog_io</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gpio.o(i.hal_gpio_cfg_analog_io))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pad_pe_control
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcMeasureTask
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_analog_pin
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_analog_pin
</UL>

<P><STRONG><a name="[e9]"></a>hal_gpio_fmux</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, gpio.o(i.hal_gpio_fmux))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hal_gpio_fmux
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux_set
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_handle
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_sleep_handler
</UL>

<P><STRONG><a name="[12f]"></a>hal_gpio_fmux_set</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, gpio.o(i.hal_gpio_fmux_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_gpio_fmux_set &rArr; hal_gpio_fmux
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_open_channel
</UL>

<P><STRONG><a name="[130]"></a>hal_gpio_init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, gpio.o(i.hal_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_gpio_init &rArr; hal_pwrmgr_register
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
</UL>

<P><STRONG><a name="[ed]"></a>hal_gpio_pin_init</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, gpio.o(i.hal_gpio_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = hal_gpio_pin_init &rArr; hal_gpio_fmux
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin0to3_pin31to34_control
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_timeout_handle
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_reflash
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_analog_pin
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
</UL>

<P><STRONG><a name="[ee]"></a>hal_gpio_pull_set</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, gpio.o(i.hal_gpio_pull_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_clock_config
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_timeout_handle
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_cfg_analog_io
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_reflash
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_analog_pin
</UL>

<P><STRONG><a name="[eb]"></a>hal_gpio_read</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, gpio.o(i.hal_gpio_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hal_gpio_read
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_wakeup_trigger
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_sleep_handler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_wakeup_handler
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
</UL>

<P><STRONG><a name="[ea]"></a>hal_gpio_wakeup_set</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, gpio.o(i.hal_gpio_wakeup_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = hal_gpio_wakeup_set &rArr; io_wakeup_control
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_wakeup_control
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_sleep_handler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_sleep_handler
</UL>

<P><STRONG><a name="[b6]"></a>hal_gpio_write</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gpio.o(i.hal_gpio_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = hal_gpio_write &rArr; hal_gpio_pin_init &rArr; hal_gpio_fmux
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcMeasureTask
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_wakeup_handler
</UL>

<P><STRONG><a name="[116]"></a>hal_gpioin_enable</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, gpio.o(i.hal_gpioin_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = hal_gpioin_enable &rArr; hal_gpio_pin_init &rArr; hal_gpio_fmux
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_interrupt_enable
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_handler
</UL>

<P><STRONG><a name="[137]"></a>hal_pwm_close_channel</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, pwm.o(i.hal_pwm_close_channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_pwm_close_channel &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_timeout_handle
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_reflash
</UL>

<P><STRONG><a name="[139]"></a>hal_pwm_destroy</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, pwm.o(i.hal_pwm_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_pwm_destroy &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_timeout_handle
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_reflash
</UL>

<P><STRONG><a name="[13a]"></a>hal_pwm_init</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, pwm.o(i.hal_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hal_pwm_init &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_gate_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_reflash
</UL>

<P><STRONG><a name="[13b]"></a>hal_pwm_open_channel</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, pwm.o(i.hal_pwm_open_channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_pwm_open_channel &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux_set
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_reflash
</UL>

<P><STRONG><a name="[13c]"></a>hal_pwm_set_count_val</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, pwm.o(i.hal_pwm_set_count_val))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_reflash
</UL>

<P><STRONG><a name="[13d]"></a>hal_pwm_start</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, pwm.o(i.hal_pwm_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_pwm_start &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_reflash
</UL>

<P><STRONG><a name="[13e]"></a>hal_pwm_stop</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, pwm.o(i.hal_pwm_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_pwm_stop &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_timeout_handle
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_reflash
</UL>

<P><STRONG><a name="[136]"></a>hal_pwrmgr_RAM_retention</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, pwrmgr.o(i.hal_pwrmgr_RAM_retention))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
</UL>

<P><STRONG><a name="[13f]"></a>hal_pwrmgr_RAM_retention_set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pwrmgr.o(i.hal_pwrmgr_RAM_retention_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_pwrmgr_RAM_retention_set &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_sleep_process
</UL>

<P><STRONG><a name="[140]"></a>hal_pwrmgr_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, pwrmgr.o(i.hal_pwrmgr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_pwrmgr_init
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableSleep (via Veneer)
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSleep (via Veneer)
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>hal_pwrmgr_lock</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, pwrmgr.o(i.hal_pwrmgr_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSleep (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_use_tx_buf
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_start
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_start
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_wakeup_handler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_rx_handler
</UL>

<P><STRONG><a name="[e3]"></a>hal_pwrmgr_register</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, pwrmgr.o(i.hal_pwrmgr_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwrmgr_register
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_init
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_init
</UL>

<P><STRONG><a name="[2c]"></a>hal_pwrmgr_sleep_process</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, pwrmgr.o(i.hal_pwrmgr_sleep_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_pwrmgr_sleep_process &rArr; hal_pwrmgr_RAM_retention_set &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_RAM_retention_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[e8]"></a>hal_pwrmgr_unlock</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, pwrmgr.o(i.hal_pwrmgr_unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableSleep (via Veneer)
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSleep (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_tx_empty_handler
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_handle
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_stop
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_rx_handler
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
</UL>

<P><STRONG><a name="[2d]"></a>hal_pwrmgr_wakeup_process</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, pwrmgr.o(i.hal_pwrmgr_wakeup_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_pwrmgr_wakeup_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[144]"></a>hal_rom_code_ini</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, patch.o(i.hal_rom_code_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = hal_rom_code_ini &rArr; rf_calibrate1 &rArr; rc32k_calibration_check &rArr; rc32k_tracking_check &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_init (via Veneer)
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
</UL>

<P><STRONG><a name="[135]"></a>hal_rtc_clock_config</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, clock.o(i.hal_rtc_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_rtc_clock_config &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
</UL>

<P><STRONG><a name="[134]"></a>hal_system_init</STRONG> (Thumb, 250 bytes, Stack size 16 bytes, common.o(i.hal_system_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_system_init &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
</UL>

<P><STRONG><a name="[171]"></a>hal_systick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clock.o(i.hal_systick))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cnt_get
</UL>

<P><STRONG><a name="[e4]"></a>hal_uart_init</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, uart.o(i.hal_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hal_uart_init &rArr; uart_hw_config &rArr; hal_gpio_fmux_set &rArr; hal_gpio_fmux
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_init
</UL>

<P><STRONG><a name="[148]"></a>hal_uart_send_buff</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, uart.o(i.hal_uart_send_buff))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_use_tx_buf
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_polling
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>

<P><STRONG><a name="[14b]"></a>init_config</STRONG> (Thumb, 426 bytes, Stack size 24 bytes, patch.o(i.init_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = init_config &rArr; check_chip_mAddr &rArr; read_chip_mAddr &rArr; chip_id_one_bit_hot_convter
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_chip_mAddr
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_chip_id
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dc]"></a>light_ctrl</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, led_light.o(i.light_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = light_ctrl &rArr; light_reflash &rArr; hal_pwm_init &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_reflash
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_light_ctrl
</UL>

<P><STRONG><a name="[c1]"></a>light_init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, led_light.o(i.light_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = light_init &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristInit
</UL>

<P><STRONG><a name="[c4]"></a>light_timeout_handle</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, led_light.o(i.light_timeout_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = light_timeout_handle &rArr; hal_pwm_destroy &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_stop
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_destroy
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_close_channel
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristProcEvt
</UL>

<P><STRONG><a name="[16]"></a>ll_hw_go1</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, patch.o(i.ll_hw_go1))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ll_hw_go1 &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.init_config)
</UL>
<P><STRONG><a name="[7]"></a>main</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = main &rArr; hal_init &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_set_heap (via Veneer)
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_config
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[151]"></a>on_recieved_cmd_packet</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, wristservice.o(i.on_recieved_cmd_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = on_recieved_cmd_packet &rArr; cmd_set_time &rArr; cmd_response_err &rArr; wristProfile_Notify &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hex
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_set_time
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_response_err
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_query_version
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_lookup_bracelet
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_light_ctrl
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get_time
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ProcessEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wristProfile_WriteAttrCB
</UL>

<P><STRONG><a name="[2b]"></a>osalInitTasks</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, osal_wrist.o(i.osalInitTasks))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = osalInitTasks &rArr; appWristInit &rArr; app_datetime_init &rArr; check_default_datetime &rArr; app_datetime_adjust_baseline &rArr; print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristInit
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_Init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_Init (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init (via Veneer)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_Init (via Veneer)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Init (via Veneer)
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_Init (via Veneer)
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Init (via Veneer)
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[63]"></a>osal_snv_read</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, osal_snv.o(i.osal_snv_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = osal_snv_read &rArr; print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snv_calc_addr
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrResolvePrivateAddr
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrGetStateFlags
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrGetPublicAddr
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrBondReq
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[be]"></a>ota_app_AddService</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ota_app_service.o(i.ota_app_AddService))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = ota_app_AddService &rArr; load_ota_version &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Register (via Veneer)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_ota_version
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristInit
</UL>

<P><STRONG><a name="[ae]"></a>phy_printf</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, my_printf.o(i.phy_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_buff
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cons_callback
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wristProfile_Notify
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hex
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_set_time
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WristGapStateCB
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristInit
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_fault
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_app_AddService
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_WriteAttrCB
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_ReadAttrCB
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_ota_version
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_evt
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_set
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ProcessEvent
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_recieved_cmd_packet
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;datetime_print
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_default_datetime
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_adjust_baseline
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_parse_cmd
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hex
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_load_calibration_value
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hex
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_default_tm
</UL>

<P><STRONG><a name="[164]"></a>rc32k_calibration</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, patch.o(i.rc32k_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rc32k_calibration &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration_check
</UL>

<P><STRONG><a name="[165]"></a>rc32k_calibration_check</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, patch.o(i.rc32k_calibration_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = rc32k_calibration_check &rArr; rc32k_tracking_check &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_tracking_check
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
</UL>

<P><STRONG><a name="[166]"></a>rc32k_tracking_check</STRONG> (Thumb, 104 bytes, Stack size 88 bytes, patch.o(i.rc32k_tracking_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = rc32k_tracking_check &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arry_sort
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration_check
</UL>

<P><STRONG><a name="[d3]"></a>read_chip_id</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, flash_ext.o(i.read_chip_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = read_chip_id &rArr; chip_id_one_bit_hot_convter
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chip_id_one_bit_hot_convter
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_chip_id
</UL>

<P><STRONG><a name="[d5]"></a>read_chip_mAddr</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, flash_ext.o(i.read_chip_mAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = read_chip_mAddr &rArr; chip_id_one_bit_hot_convter
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chip_id_one_bit_hot_convter
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_chip_mAddr
</UL>

<P><STRONG><a name="[17]"></a>rf_calibrate1</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, patch.o(i.rf_calibrate1))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = rf_calibrate1 &rArr; rc32k_calibration_check &rArr; rc32k_tracking_check &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tpCal_gen_cap_arrary
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rxDcoc_cfg
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ana_cfg
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration_check
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.init_config)
</UL>
<P><STRONG><a name="[16a]"></a>rf_phy_ana_cfg</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, rf_phy_driver.o(i.rf_phy_ana_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rf_phy_ana_cfg &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
</UL>

<P><STRONG><a name="[16d]"></a>rf_phy_bb_cfg</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, rf_phy_driver.o(i.rf_phy_bb_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rf_phy_bb_cfg &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
</UL>

<P><STRONG><a name="[2e]"></a>rf_phy_ini</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, rf_phy_driver.o(i.rf_phy_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rf_phy_ini &rArr; rf_phy_ana_cfg &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_set_txPower
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_bb_cfg
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ana_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[16e]"></a>rf_phy_set_txPower</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rf_phy_driver.o(i.rf_phy_set_txPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rf_phy_set_txPower &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
</UL>

<P><STRONG><a name="[16c]"></a>rf_rxDcoc_cfg</STRONG> (Thumb, 220 bytes, Stack size 20 bytes, rf_phy_driver.o(i.rf_rxDcoc_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rf_rxDcoc_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
</UL>

<P><STRONG><a name="[16b]"></a>rf_tpCal_gen_cap_arrary</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, rf_phy_driver.o(i.rf_tpCal_gen_cap_arrary))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rf_tpCal_gen_cap_arrary &rArr; rf_tp_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tp_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
</UL>

<P><STRONG><a name="[16f]"></a>rf_tp_cal</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, rf_phy_driver.o(i.rf_tp_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rf_tp_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tpCal_gen_cap_arrary
</UL>

<P><STRONG><a name="[138]"></a>subWriteReg</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, common.o(i.subWriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_system_init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_clock_config
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_set_count_val
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_open_channel
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_init
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_destroy
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_close_channel
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_RAM_retention_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_single_mode
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_differential_mode
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_channel
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_set_txPower
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_bb_cfg
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ana_cfg
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_go1
</UL>

<P><STRONG><a name="[c6]"></a>timer_cnt_get</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_datetime.o(i.timer_cnt_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_cnt_get
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_systick
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_sync_handler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_adjust_baseline
</UL>

<P><STRONG><a name="[bf]"></a>wristProfile_AddService</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wristservice.o(i.wristProfile_AddService))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = wristProfile_AddService &rArr; GATTServApp_RegisterService &rArr; gattServApp_RegisterServiceCBs
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristInit
</UL>

<P><STRONG><a name="[af]"></a>wristProfile_HandleConnStatusCB</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wristservice.o(i.wristProfile_HandleConnStatusCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wristProfile_HandleConnStatusCB &rArr; GATTServApp_InitCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_State (via Veneer)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WristGapStateCB
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[145]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_wakeup_handler
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
</UL>

<P><STRONG><a name="[133]"></a>hal_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, main.o(i.hal_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = hal_init &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_system_init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_clock_config
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_RAM_retention
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[143]"></a>hal_rfphy_init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, main.o(i.hal_rfphy_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = hal_rfphy_init &rArr; hal_rom_code_ini &rArr; rf_calibrate1 &rArr; rc32k_calibration_check &rArr; rc32k_tracking_check &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14]"></a>rf_wakeup_handler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.rf_wakeup_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rf_wakeup_handler &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.hal_rfphy_init)
</UL>
<P><STRONG><a name="[19]"></a>devInfo_ReadAttrCB</STRONG> (Thumb, 488 bytes, Stack size 48 bytes, devinfoservice.o(i.devInfo_ReadAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = devInfo_ReadAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> devinfoservice.o(.constdata)
</UL>
<P><STRONG><a name="[f5]"></a>gattServApp_EnqueuePrepareWriteReq</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gattservapp.o(i.gattServApp_EnqueuePrepareWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattServApp_EnqueuePrepareWriteReq
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindPrepareWriteQ
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq
</UL>

<P><STRONG><a name="[9b]"></a>gattServApp_FindAuthorizeAttrCB</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gattservapp.o(i.gattServApp_FindAuthorizeAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindServiceCBs
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq
</UL>

<P><STRONG><a name="[94]"></a>gattServApp_FindCharCfgItem</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gattservapp.o(i.gattServApp_FindCharCfgItem))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteCharCfg
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
</UL>

<P><STRONG><a name="[f6]"></a>gattServApp_FindPrepareWriteQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gattservapp.o(i.gattServApp_FindPrepareWriteQ))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_HandleConnStatusCB
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_EnqueuePrepareWriteReq
</UL>

<P><STRONG><a name="[a0]"></a>gattServApp_FindReadAttrCB</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gattservapp.o(i.gattServApp_FindReadAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattServApp_FindReadAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindServiceCBs
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
</UL>

<P><STRONG><a name="[f7]"></a>gattServApp_FindServiceCBs</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gattservapp.o(i.gattServApp_FindServiceCBs))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindWriteAttrCB
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindReadAttrCB
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindAuthorizeAttrCB
</UL>

<P><STRONG><a name="[a7]"></a>gattServApp_FindWriteAttrCB</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gattservapp.o(i.gattServApp_FindWriteAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattServApp_FindWriteAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindServiceCBs
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr
</UL>

<P><STRONG><a name="[a]"></a>gattServApp_HandleConnStatusCB</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, gattservapp.o(i.gattServApp_HandleConnStatusCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gattServApp_HandleConnStatusCB &rArr; GATTServApp_InitCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_State (via Veneer)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindPrepareWriteQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattservapp.o(i.GATTServApp_Init)
</UL>
<P><STRONG><a name="[f9]"></a>gattServApp_ProcessExchangeMTUReq</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gattservapp.o(i.gattServApp_ProcessExchangeMTUReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattServApp_ProcessExchangeMTUReq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ExchangeMTURsp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[fb]"></a>gattServApp_ProcessExecuteWriteReq</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, gattservapp.o(i.gattServApp_ProcessExecuteWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gattServApp_ProcessExecuteWriteReq &rArr; GATTServApp_WriteAttr &rArr; gattServApp_FindWriteAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ExecuteWriteRsp (via Veneer)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindPrepareWriteQ
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[fd]"></a>gattServApp_ProcessFindByTypeValueReq</STRONG> (Thumb, 234 bytes, Stack size 48 bytes, gattservapp.o(i.gattServApp_ProcessFindByTypeValueReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gattServApp_ProcessFindByTypeValueReq &rArr; GATTServApp_ReadAttr &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindNextAttr (via Veneer)
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID (via Veneer)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_FindByTypeValueRsp (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[99]"></a>gattServApp_ProcessMsg</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, gattservapp.o(i.gattServApp_ProcessMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = gattServApp_ProcessMsg &rArr; gattServApp_ProcessReadByTypeReq &rArr; GATTServApp_ReadAttr &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_AppCompletedMsg (via Veneer)
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ErrorRsp (via Veneer)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadReq
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadBlobReq
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExchangeMTUReq
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessEvent
</UL>

<P><STRONG><a name="[106]"></a>gattServApp_ProcessPrepareWriteReq</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, gattservapp.o(i.gattServApp_ProcessPrepareWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gattServApp_ProcessPrepareWriteReq &rArr; gattServApp_EnqueuePrepareWriteReq
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_PrepareWriteRsp (via Veneer)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindAuthorizeAttrCB
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_EnqueuePrepareWriteReq
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[102]"></a>gattServApp_ProcessReadBlobReq</STRONG> (Thumb, 96 bytes, Stack size 56 bytes, gattservapp.o(i.gattServApp_ProcessReadBlobReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gattServApp_ProcessReadBlobReq &rArr; GATTServApp_ReadAttr &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadBlobRsp (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[104]"></a>gattServApp_ProcessReadByGrpTypeReq</STRONG> (Thumb, 350 bytes, Stack size 56 bytes, gattservapp.o(i.gattServApp_ProcessReadByGrpTypeReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gattServApp_ProcessReadByGrpTypeReq &rArr; GATTServApp_ReadAttr &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_VerifyReadPermissions (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindNextAttr (via Veneer)
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID (via Veneer)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadByGrpTypeRsp (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[100]"></a>gattServApp_ProcessReadByTypeReq</STRONG> (Thumb, 296 bytes, Stack size 64 bytes, gattservapp.o(i.gattServApp_ProcessReadByTypeReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = gattServApp_ProcessReadByTypeReq &rArr; GATTServApp_ReadAttr &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_VerifyReadPermissions (via Veneer)
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID (via Veneer)
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadByTypeRsp (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[103]"></a>gattServApp_ProcessReadMultiReq</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, gattservapp.o(i.gattServApp_ProcessReadMultiReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gattServApp_ProcessReadMultiReq &rArr; GATTServApp_ReadAttr &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadMultiRsp (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[101]"></a>gattServApp_ProcessReadReq</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, gattservapp.o(i.gattServApp_ProcessReadReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gattServApp_ProcessReadReq &rArr; GATTServApp_ReadAttr &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadRsp (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[105]"></a>gattServApp_ProcessWriteReq</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, gattservapp.o(i.gattServApp_ProcessWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gattServApp_ProcessWriteReq &rArr; GATTServApp_WriteAttr &rArr; gattServApp_FindWriteAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_WriteRsp (via Veneer)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[a2]"></a>gattServApp_RegisterServiceCBs</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gattservapp.o(i.gattServApp_RegisterServiceCBs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattServApp_RegisterServiceCBs
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
</UL>

<P><STRONG><a name="[91]"></a>gattServApp_SetNumPrepareWrites</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, gattservapp.o(i.gattServApp_SetNumPrepareWrites))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattServApp_SetNumPrepareWrites
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init
</UL>

<P><STRONG><a name="[1a]"></a>gattServApp_WriteAttrCB</STRONG> (Thumb, 90 bytes, Stack size 56 bytes, gattservapp.o(i.gattServApp_WriteAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gattServApp_WriteAttrCB &rArr; GATTServApp_ProcessCCCWriteReq &rArr; GATTServApp_WriteCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattservapp.o(.constdata)
</UL>
<P><STRONG><a name="[1b]"></a>ggs_ReadAttrCB</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, gapgattserver.o(i.ggs_ReadAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ggs_ReadAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_strlen (via Veneer)
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapgattserver.o(.constdata)
</UL>
<P><STRONG><a name="[ab]"></a>ggs_SetAttrWPermit</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, gapgattserver.o(i.ggs_SetAttrWPermit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ggs_SetAttrWPermit
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter
</UL>

<P><STRONG><a name="[1c]"></a>ggs_WriteAttrCB</STRONG> (Thumb, 334 bytes, Stack size 32 bytes, gapgattserver.o(i.ggs_WriteAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ggs_WriteAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_strlen (via Veneer)
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapgattserver.o(.constdata)
</UL>
<P><STRONG><a name="[7d]"></a>gapRole_HandleParamUpdateNoSuccess</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, peripheral.o(i.gapRole_HandleParamUpdateNoSuccess))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapRole_HandleParamUpdateNoSuccess &rArr; GAPRole_SendUpdateParam &rArr; gapRole_startConnUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_TerminateConnection
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SendUpdateParam
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent
</UL>

<P><STRONG><a name="[f3]"></a>gapRole_ProcessGAPMsg</STRONG> (Thumb, 706 bytes, Stack size 24 bytes, peripheral.o(i.gapRole_ProcessGAPMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = gapRole_ProcessGAPMsg &rArr; GAPBondMgr_LinkEst &rArr; gapBondMgrBondReq &rArr; osal_snv_read &rArr; print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_get_timeoutEx (via Veneer)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_UpdateAdvertisingData (via Veneer)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue (via Veneer)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_EndDiscoverable (via Veneer)
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg
</UL>

<P><STRONG><a name="[77]"></a>gapRole_ProcessOSALMsg</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, peripheral.o(i.gapRole_ProcessOSALMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = gapRole_ProcessOSALMsg &rArr; gapRole_ProcessGAPMsg &rArr; GAPBondMgr_LinkEst &rArr; gapBondMgrBondReq &rArr; osal_snv_read &rArr; print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue (via Veneer)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_TerminateConnection
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent
</UL>

<P><STRONG><a name="[86]"></a>gapRole_SetupGAP</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, peripheral.o(i.gapRole_SetupGAP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gapRole_SetupGAP &rArr; GAP_DeviceInit
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_StartDevice
</UL>

<P><STRONG><a name="[7c]"></a>gapRole_startConnUpdate</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, peripheral.o(i.gapRole_startConnUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapRole_startConnUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_ConnParamUpdateReq (via Veneer)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SendUpdateParam
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent
</UL>

<P><STRONG><a name="[61]"></a>gapBondMgrBondReq</STRONG> (Thumb, 94 bytes, Stack size 64 bytes, gapbondmgr.o(i.gapBondMgrBondReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = gapBondMgrBondReq &rArr; osal_snv_read &rArr; print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Bond (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[6d]"></a>gapBondMgrFindAddr</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gapbondmgr.o(i.gapBondMgrFindAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapBondMgrFindAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
</UL>

<P><STRONG><a name="[6e]"></a>gapBondMgrFindReconnectAddr</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gapbondmgr.o(i.gapBondMgrFindReconnectAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapBondMgrFindReconnectAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
</UL>

<P><STRONG><a name="[6f]"></a>gapBondMgrGetPublicAddr</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, gapbondmgr.o(i.gapBondMgrGetPublicAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = gapBondMgrGetPublicAddr &rArr; osal_snv_read &rArr; print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
</UL>

<P><STRONG><a name="[60]"></a>gapBondMgrGetStateFlags</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gapbondmgr.o(i.gapBondMgrGetStateFlags))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = gapBondMgrGetStateFlags &rArr; osal_snv_read &rArr; print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[66]"></a>gapBondMgrInvertCharCfgItem</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gapbondmgr.o(i.gapBondMgrInvertCharCfgItem))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[70]"></a>gapBondMgrResolvePrivateAddr</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, gapbondmgr.o(i.gapBondMgrResolvePrivateAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = gapBondMgrResolvePrivateAddr &rArr; osal_snv_read &rArr; print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_isbufset (via Veneer)
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ResolvePrivateAddr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
</UL>

<P><STRONG><a name="[69]"></a>gapBondMgrSlaveSecurityReq</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gapbondmgr.o(i.gapBondMgrSlaveSecurityReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapBondMgrSlaveSecurityReq
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SendSlaveSecurityRequest (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[18]"></a>handleConnStatusCB</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ota_app_service.o(i.handleConnStatusCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = handleConnStatusCB &rArr; GATTServApp_InitCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_State (via Veneer)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota_app_service.o(i.ota_app_AddService)
</UL>
<P><STRONG><a name="[14f]"></a>load_ota_version</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ota_app_service.o(i.load_ota_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = load_ota_version &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_app_AddService
</UL>

<P><STRONG><a name="[1d]"></a>ota_ReadAttrCB</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, ota_app_service.o(i.ota_ReadAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = ota_ReadAttrCB &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota_app_service.o(.constdata)
</UL>
<P><STRONG><a name="[1e]"></a>ota_WriteAttrCB</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, ota_app_service.o(i.ota_WriteAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = ota_WriteAttrCB &rArr; process_cmd &rArr; response &rArr; sendNotify &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota_app_service.o(.constdata)
</UL>
<P><STRONG><a name="[15b]"></a>process_cmd</STRONG> (Thumb, 234 bytes, Stack size 48 bytes, ota_app_service.o(i.process_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = process_cmd &rArr; response &rArr; sendNotify &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ota_mode
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_WriteAttrCB
</UL>

<P><STRONG><a name="[162]"></a>response</STRONG> (Thumb, 50 bytes, Stack size 264 bytes, ota_app_service.o(i.response))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = response &rArr; sendNotify &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendNotify
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd
</UL>

<P><STRONG><a name="[169]"></a>sendNotify</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, ota_app_service.o(i.sendNotify))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sendNotify &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_Notification (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response
</UL>

<P><STRONG><a name="[161]"></a>set_ota_mode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ota_app_service.o(i.set_ota_mode))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd
</UL>

<P><STRONG><a name="[2f]"></a>hard_fault</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, jump_table.o(i.hard_fault))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = hard_fault &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[0]"></a>WristGapStateCB</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, app_wrist.o(i.WristGapStateCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = WristGapStateCB &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DevInfo_SetParameter
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wristProfile_HandleConnStatusCB
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SetParamValue (via Veneer)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_wrist.o(.data)
</UL>
<P><STRONG><a name="[c2]"></a>appWristProcOSALMsg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_wrist.o(i.appWristProcOSALMsg))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appWristProcEvt
</UL>

<P><STRONG><a name="[d]"></a>wristCB</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_wrist.o(i.wristCB))
<BR>[Address Reference Count : 1]<UL><LI> app_wrist.o(i.appWristInit)
</UL>
<P><STRONG><a name="[d9]"></a>checksum</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wristservice.o(i.checksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_response_err
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_query_version
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get_time
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_recieved_cmd_packet
</UL>

<P><STRONG><a name="[d8]"></a>cmd_get_time</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, wristservice.o(i.cmd_get_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = cmd_get_time &rArr; cmd_response &rArr; wristProfile_Notify &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_response
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_recieved_cmd_packet
</UL>

<P><STRONG><a name="[db]"></a>cmd_light_ctrl</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, wristservice.o(i.cmd_light_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = cmd_light_ctrl &rArr; cmd_response_err &rArr; wristProfile_Notify &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_response_err
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_recieved_cmd_packet
</UL>

<P><STRONG><a name="[de]"></a>cmd_lookup_bracelet</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, wristservice.o(i.cmd_lookup_bracelet))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = cmd_lookup_bracelet &rArr; cmd_response_err &rArr; wristProfile_Notify &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_response_err
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_recieved_cmd_packet
</UL>

<P><STRONG><a name="[df]"></a>cmd_query_version</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, wristservice.o(i.cmd_query_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = cmd_query_version &rArr; cmd_response &rArr; wristProfile_Notify &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_response
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_recieved_cmd_packet
</UL>

<P><STRONG><a name="[da]"></a>cmd_response</STRONG> (Thumb, 48 bytes, Stack size 264 bytes, wristservice.o(i.cmd_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = cmd_response &rArr; wristProfile_Notify &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wristProfile_Notify
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_query_version
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get_time
</UL>

<P><STRONG><a name="[dd]"></a>cmd_response_err</STRONG> (Thumb, 96 bytes, Stack size 272 bytes, wristservice.o(i.cmd_response_err))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = cmd_response_err &rArr; wristProfile_Notify &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wristProfile_Notify
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_set_time
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_lookup_bracelet
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_light_ctrl
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_recieved_cmd_packet
</UL>

<P><STRONG><a name="[e1]"></a>cmd_set_time</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, wristservice.o(i.cmd_set_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = cmd_set_time &rArr; cmd_response_err &rArr; wristProfile_Notify &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_response_err
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_set
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_recieved_cmd_packet
</UL>

<P><STRONG><a name="[152]"></a>print_hex</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, wristservice.o(i.print_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_recieved_cmd_packet
</UL>

<P><STRONG><a name="[e0]"></a>wristProfile_Notify</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, wristservice.o(i.wristProfile_Notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = wristProfile_Notify &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_Notification (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_response_err
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_response
</UL>

<P><STRONG><a name="[28]"></a>wristProfile_ReadAttrCB</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, wristservice.o(i.wristProfile_ReadAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = wristProfile_ReadAttrCB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wristservice.o(.constdata)
</UL>
<P><STRONG><a name="[29]"></a>wristProfile_WriteAttrCB</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, wristservice.o(i.wristProfile_WriteAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = wristProfile_WriteAttrCB &rArr; on_recieved_cmd_packet &rArr; cmd_set_time &rArr; cmd_response_err &rArr; wristProfile_Notify &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_recieved_cmd_packet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wristservice.o(.constdata)
</UL>
<P><STRONG><a name="[14c]"></a>light_reflash</STRONG> (Thumb, 338 bytes, Stack size 8 bytes, led_light.o(i.light_reflash))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = light_reflash &rArr; hal_pwm_init &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_stop
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_start
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_set_count_val
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_open_channel
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_init
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_destroy
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_close_channel
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_stop_timer
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_ctrl
</UL>

<P><STRONG><a name="[14e]"></a>light_start_timer</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, led_light.o(i.light_start_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = light_start_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_reflash
</UL>

<P><STRONG><a name="[14d]"></a>light_stop_timer</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, led_light.o(i.light_stop_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = light_stop_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_reflash
</UL>

<P><STRONG><a name="[b2]"></a>adcMeasureTask</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, adccaptrue.o(i.adcMeasureTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = adcMeasureTask &rArr; hal_adc_config_channel &rArr; set_analog_pin &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pad_ds_control (via Veneer)
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_cfg_analog_io
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_start
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ProcessEvent
</UL>

<P><STRONG><a name="[ba]"></a>adc_ProcessOSALMsg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adccaptrue.o(i.adc_ProcessOSALMsg))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ProcessEvent
</UL>

<P><STRONG><a name="[c]"></a>adc_evt</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, adccaptrue.o(i.adc_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = adc_evt &rArr; hal_adc_value_cal &rArr; hal_adc_load_calibration_value &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adccaptrue.o(i.adcMeasureTask)
</UL>
<P><STRONG><a name="[15c]"></a>print</STRONG> (Thumb, 362 bytes, Stack size 48 bytes, my_printf.o(i.print))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prints
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printi
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printchar
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>

<P><STRONG><a name="[160]"></a>printchar</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, my_printf.o(i.printchar))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = printchar
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prints
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printi
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
</UL>

<P><STRONG><a name="[15f]"></a>printi</STRONG> (Thumb, 198 bytes, Stack size 64 bytes, my_printf.o(i.printi))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prints
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printchar
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
</UL>

<P><STRONG><a name="[15e]"></a>prints</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, my_printf.o(i.prints))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printchar
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printi
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
</UL>

<P><STRONG><a name="[121]"></a>spi_int_handle</STRONG> (Thumb, 306 bytes, Stack size 72 bytes, spi.o(i.spi_int_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = spi_int_handle &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_SPI1_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_SPI0_IRQHandler
</UL>

<P><STRONG><a name="[120]"></a>spis_int_handle</STRONG> (Thumb, 126 bytes, Stack size 64 bytes, spi.o(i.spis_int_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = spis_int_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_SPI1_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_SPI0_IRQHandler
</UL>

<P><STRONG><a name="[174]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, uart.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
</UL>

<P><STRONG><a name="[122]"></a>irq_rx_handler</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, uart.o(i.irq_rx_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = irq_rx_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_UART0_IRQHandler
</UL>

<P><STRONG><a name="[123]"></a>irq_tx_empty_handler</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, uart.o(i.irq_tx_empty_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = irq_tx_empty_handler &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_UART0_IRQHandler
</UL>

<P><STRONG><a name="[14a]"></a>txmit_buf_polling</STRONG> (Thumb, 140 bytes, Stack size 12 bytes, uart.o(i.txmit_buf_polling))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = txmit_buf_polling
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_buff
</UL>

<P><STRONG><a name="[149]"></a>txmit_buf_use_tx_buf</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, uart.o(i.txmit_buf_use_tx_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_buff
</UL>

<P><STRONG><a name="[15]"></a>uart_hw_config</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, uart.o(i.uart_hw_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uart_hw_config &rArr; hal_gpio_fmux_set &rArr; hal_gpio_fmux
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_reset
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_pclk
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux_set
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_gate_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(i.hal_uart_init)
</UL>
<P><STRONG><a name="[115]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_handler
</UL>

<P><STRONG><a name="[114]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, gpio.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_handler
</UL>

<P><STRONG><a name="[11a]"></a>gpio_interrupt_enable</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gpio.o(i.gpio_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_event
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
</UL>

<P><STRONG><a name="[12]"></a>gpio_sleep_handler</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gpio.o(i.gpio_sleep_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = gpio_sleep_handler &rArr; hal_gpio_wakeup_set &rArr; io_wakeup_control
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_set
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio.o(i.hal_gpio_init)
</UL>
<P><STRONG><a name="[11]"></a>gpio_wakeup_handler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gpio.o(i.gpio_wakeup_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = gpio_wakeup_handler &rArr; hal_gpioin_enable &rArr; hal_gpio_pin_init &rArr; hal_gpio_fmux
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_wakeup_trigger
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio.o(i.hal_gpio_init)
</UL>
<P><STRONG><a name="[118]"></a>gpioin_event</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, gpio.o(i.gpioin_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gpioin_event &rArr; gpioin_event_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_event_pin
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_GPIO_IRQHandler
</UL>

<P><STRONG><a name="[119]"></a>gpioin_event_pin</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gpio.o(i.gpioin_event_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpioin_event_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_wakeup_trigger
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_event
</UL>

<P><STRONG><a name="[117]"></a>gpioin_wakeup_trigger</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gpio.o(i.gpioin_wakeup_trigger))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpioin_wakeup_trigger &rArr; gpioin_event_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_event_pin
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_handler
</UL>

<P><STRONG><a name="[132]"></a>io_wakeup_control</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, gpio.o(i.io_wakeup_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = io_wakeup_control
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_set
</UL>

<P><STRONG><a name="[12e]"></a>pad_pe_control</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, gpio.o(i.pad_pe_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pad_pe_control
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_cfg_analog_io
</UL>

<P><STRONG><a name="[bc]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, adc.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_wakeup_hdl
</UL>

<P><STRONG><a name="[10]"></a>adc_wakeup_hdl</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, adc.o(i.adc_wakeup_hdl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adc_wakeup_hdl &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adc.o(i.hal_adc_init)
</UL>
<P><STRONG><a name="[d7]"></a>clear_adcc_cfg</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, adc.o(i.clear_adcc_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clear_adcc_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
</UL>

<P><STRONG><a name="[ec]"></a>disable_analog_pin</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, adc.o(i.disable_analog_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = disable_analog_pin &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_cfg_analog_io
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
</UL>

<P><STRONG><a name="[12b]"></a>hal_adc_load_calibration_value</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, adc.o(i.hal_adc_load_calibration_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = hal_adc_load_calibration_value &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
</UL>

<P><STRONG><a name="[128]"></a>set_analog_pin</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, adc.o(i.set_analog_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = set_analog_pin &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_cfg_analog_io
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
</UL>

<P><STRONG><a name="[126]"></a>set_channel</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, adc.o(i.set_channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = set_channel &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
</UL>

<P><STRONG><a name="[127]"></a>set_differential_mode</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, adc.o(i.set_differential_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = set_differential_mode &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
</UL>

<P><STRONG><a name="[125]"></a>set_sampling_resolution</STRONG> (Thumb, 350 bytes, Stack size 8 bytes, adc.o(i.set_sampling_resolution))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_sampling_resolution
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
</UL>

<P><STRONG><a name="[129]"></a>set_single_mode</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, adc.o(i.set_single_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = set_single_mode &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
</UL>

<P><STRONG><a name="[11c]"></a>get_key_matrix</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, kscan.o(i.get_key_matrix))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_key_matrix
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_KSCAN_IRQHandler
</UL>

<P><STRONG><a name="[11e]"></a>kscan_compare_key</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, kscan.o(i.kscan_compare_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = kscan_compare_key
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_KSCAN_IRQHandler
</UL>

<P><STRONG><a name="[11d]"></a>rmv_ghost_key</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, kscan.o(i.rmv_ghost_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rmv_ghost_key
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_KSCAN_IRQHandler
</UL>

<P><STRONG><a name="[15a]"></a>print_hex</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, osal_snv.o(i.print_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
</UL>

<P><STRONG><a name="[159]"></a>snv_calc_addr</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, osal_snv.o(i.snv_calc_addr))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
</UL>

<P><STRONG><a name="[c7]"></a>app_datetime_adjust_baseline</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, app_datetime.o(i.app_datetime_adjust_baseline))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = app_datetime_adjust_baseline &rArr; print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cnt_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hex
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_set
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_default_datetime
</UL>

<P><STRONG><a name="[c9]"></a>check_default_datetime</STRONG> (Thumb, 50 bytes, Stack size 64 bytes, app_datetime.o(i.check_default_datetime))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = check_default_datetime &rArr; app_datetime_adjust_baseline &rArr; print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_adjust_baseline
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_default_tm
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_init
</UL>

<P><STRONG><a name="[cd]"></a>datetime_print</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, app_datetime.o(i.datetime_print))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = datetime_print &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_sync_handler
</UL>

<P><STRONG><a name="[ca]"></a>dt_timer_start</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_datetime.o(i.dt_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dt_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_sync_handler
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_init
</UL>

<P><STRONG><a name="[d6]"></a>get_default_tm</STRONG> (Thumb, 236 bytes, Stack size 48 bytes, app_datetime.o(i.get_default_tm))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = get_default_tm &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_default_datetime
</UL>

<P><STRONG><a name="[c8]"></a>print_hex</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_datetime.o(i.print_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = print_hex &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints &rArr; printchar
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_set
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_datetime_adjust_baseline
</UL>

<P><STRONG><a name="[168]"></a>chip_id_one_bit_hot_convter</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, flash_ext.o(i.chip_id_one_bit_hot_convter))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = chip_id_one_bit_hot_convter
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_chip_mAddr
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_chip_id
</UL>

<P><STRONG><a name="[b1]"></a>_printf_core</STRONG> (Thumb, 456 bytes, Stack size 88 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$3
</UL>

<P><STRONG><a name="[b]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf3.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0sprintf$3)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
